<NavigationWindow x:Class="image_match.help.help_window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Height="600" Width="800"
        ShowInTaskbar="True"
        WindowStartupLocation="CenterScreen"
        Foreground="Blue"
        Title="Help" Name="Help" SizeChanged="window_SizeChanged" >
    <NavigationWindow.Resources>
        <Color x:Key="gray_background">#FF686868</Color>
        <SolidColorBrush x:Key="gray_background_brush" Color="{StaticResource gray_background}"/>
        
        <Style x:Key="{x:Type CheckBox}"
       TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="FocusVisualStyle"
          Value="{DynamicResource CheckBoxFocusVisual}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                        Margin="0,1,0,0"
                    Width="12"
                    Height="12"
                    CornerRadius="6"
                    BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="Black"></SolidColorBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <SolidColorBrush Color="LightGray"></SolidColorBrush>

                                    </Border.Background>
                                    <Grid>
                                        <Path Visibility="Collapsed"
                      Width="7"
                      Height="7"
                      x:Name="CheckMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="2"
                      Data="M 0 0 L 7 7 M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                            </Path.Stroke>
                                        </Path>
                                        <Path Visibility="Collapsed"
                      Width="7"
                      Height="7"
                      x:Name="InderminateMark"
                      SnapsToDevicePixels="False"
                      StrokeThickness="2"
                      Data="M 0 7 L 7 0">
                                            <Path.Stroke>
                                                <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                            </Path.Stroke>
                                        </Path>
                                    </Grid>
                                </Border>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource PressedBorderLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                 Storyboard.TargetName="InderminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                            Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type ResizeGrip}"
       TargetType="{x:Type ResizeGrip}">
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ResizeGrip}">
                        <Border Background="Transparent"
                SnapsToDevicePixels="True"
                Width="16"
                Height="16">
                            <Rectangle Margin="2">
                                <Rectangle.Fill>
                                    <DrawingBrush Viewport="0,0,4,4"
                            ViewportUnits="Absolute"
                            Viewbox="0,0,8,8"
                            ViewboxUnits="Absolute"
                            TileMode="Tile">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#FFE8EDF9"
                                       Geometry="M 4 4 L 4 8 L 
                                                 8 8 L 8 4 z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">#FF7381F9</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <Style x:Key="NavWinButtonStyle"
       TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Command"
          Value="NavigationCommands.BrowseBack" />
            <Setter Property="Focusable"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Ellipse"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Ellipse"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Ellipse"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                Storyboard.TargetProperty="(Shape.Fill).
                    (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>

                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Ellipse x:Name="Ellipse"
                   StrokeThickness="1"
                   Width="24"
                   Height="24">
                                <Ellipse.Stroke>
                                    <SolidColorBrush Color="{DynamicResource NavButtonFrameColor}" />
                                </Ellipse.Stroke>
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                        <LinearGradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                                  Offset="1.0" />
                                            </GradientStopCollection>
                                        </LinearGradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Ellipse.Fill>
                            </Ellipse>
                            <Path x:Name="Arrow"
                Margin="0,0,3,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 6 0 L 0 6 L 6 12 Z">
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                </Path.Fill>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Command"
                   Value="{x:Static NavigationCommands.BrowseForward}">
                                <Setter TargetName="Arrow"
                    Property="Data"
                    Value="M 0 0 L 6 6 L 0 12 z" />
                                <Setter TargetName="Arrow"
                    Property="Margin"
                    Value="3,0,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- NavWin Menu Style -->
        <Style x:Key="NavWinMenu"
       TargetType="{x:Type Menu}">
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
            <Setter Property="IsMainMenu"
          Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <DockPanel IsItemsHost="true" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- NavWin Menu Header Style -->
        <Style x:Key="NavWinHeaderMenuItem"
       TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid>
                            <Popup x:Name="PART_Popup"
                 Placement="Bottom"
                 VerticalOffset="2"
                 IsOpen="{TemplateBinding IsSubmenuOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Fade">
                                <Border x:Name="SubMenuBorder"
                    Background="{DynamicResource MenuPopupBrush}"
                    BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                    </Border.BorderBrush>
                                    <StackPanel IsItemsHost="true"
                          Margin="2"
                          KeyboardNavigation.TabNavigation="Cycle"
                          KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Popup>

                            <Grid x:Name="Panel"
                Width="24"
                Background="Transparent"
                HorizontalAlignment="Right"
                VerticalAlignment="Stretch"
                >

                                <Border Visibility="Hidden"
                    x:Name="HighlightBorder"
                    BorderThickness="1"
                    CornerRadius="2">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource BorderLightColor}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                                    <GradientStop Color="{DynamicResource ControlMouseOverColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Border.Background>
                                </Border>
                                <Path x:Name="Arrow"
                  SnapsToDevicePixels="false"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center"
                  Margin="0,2,4,0"
                  StrokeLineJoin="Round"
                  Data="M 0 0 L 4 4 L 8 0 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted"
                   Value="true">
                                <Setter TargetName="HighlightBorder"
                    Property="Visibility"
                    Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsSubmenuOpen"
                   Value="true">
                                <Setter TargetName="HighlightBorder"
                    Property="BorderBrush">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <GradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource BorderDarkColor}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource BorderMediumColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </GradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Background"
                    TargetName="HighlightBorder">
                                    <Setter.Value>

                                        <LinearGradientBrush EndPoint="0,1"
                                     StartPoint="0,0">
                                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                Offset="0" />
                                            <GradientStop Color="{DynamicResource ControlPressedColor}"
                                Offset="0.984" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- NavWin Menu Item Style -->

        <Style x:Key="NavWinSubmenuItem"
       TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="Header"
          Value="{Binding (JournalEntry.Name)}" />
            <Setter Property="Command"
          Value="NavigationCommands.NavigateJournal" />
            <Setter Property="CommandTarget"
          Value="{Binding TemplatedParent, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}" />
            <Setter Property="CommandParameter"
          Value="{Binding RelativeSource={RelativeSource Self}}" />
            <Setter Property="JournalEntryUnifiedViewConverter.JournalEntryPosition"
          Value="{Binding (JournalEntryUnifiedViewConverter.JournalEntryPosition)}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border"
                BorderThickness="1">
                            <Grid x:Name="Panel"
                Background="Transparent"
                SnapsToDevicePixels="true"
                Height="35"
                Width="250">
                                <Path x:Name="Glyph"
                  SnapsToDevicePixels="false"
                  Margin="7,5"
                  Width="10"
                  Height="10"
                  HorizontalAlignment="Left"
                  StrokeStartLineCap="Triangle"
                  StrokeEndLineCap="Triangle"
                  StrokeThickness="2">
                                    <Path.Stroke>
                                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                                    </Path.Stroke>
                                </Path>
                                <ContentPresenter ContentSource="Header"
                              Margin="24,5,50,5" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Value="Current"
                   Property="JournalEntryUnifiedViewConverter.JournalEntryPosition">
                                <Setter TargetName="Glyph"
                    Property="Data"
                    Value="M 0,5 L 2.5,8 L 7,3 " />
                            </Trigger>
                            <Trigger Property="IsHighlighted"
                   Value="true">
                                <Setter Property="Background"
                    TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                                            <GradientStop Color="Transparent"
                                Offset="0" />
                                            <GradientStop Color="{DynamicResource ControlMouseOverColor}"
                                Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush"
                    TargetName="Border">
                                    <Setter.Value>
                                        <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                                Offset="0" />
                                            <GradientStop Color="Transparent"
                                Offset="1" />
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted"
                         Value="true" />
                                    <Condition Value="Forward"
                         Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Glyph"
                    Property="Data"
                    Value="M 3 1 L 7 5 L 3 9 z" />
                                <Setter TargetName="Glyph"
                    Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource GlyphColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Glyph"
                    Property="Stroke"
                    Value="{x:Null}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted"
                         Value="true" />
                                    <Condition Value="Back"
                         Property="JournalEntryUnifiedViewConverter.JournalEntryPosition" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Glyph"
                    Property="Data"
                    Value="M 7 1 L 3 5 L 7 9 z" />
                                <Setter TargetName="Glyph"
                    Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource GlyphColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Glyph"
                    Property="Stroke"
                    Value="{x:Null}" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Merges Back and Forward Navigation Stacks -->

        <JournalEntryUnifiedViewConverter x:Key="JournalEntryUnifiedViewConverter" />

        <!-- SimpleStyles: NavigationWindow -->

        <Style x:Key="{x:Type NavigationWindow}"
       TargetType="{x:Type NavigationWindow}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type NavigationWindow}">
                        <DockPanel>
                            <DockPanel.Background>
                                <SolidColorBrush Color="{DynamicResource WindowColor}" />
                            </DockPanel.Background>
                            <Border DockPanel.Dock="Top"
                  Height="30"
                  BorderThickness="1">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                </Border.BorderBrush>
                                <Grid>
                                    <Grid.Background>

                                        <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStopCollection>
                                                    <GradientStop Color="{DynamicResource ControlLightColor}"
                                    Offset="0.0" />
                                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                                    Offset="1.0" />
                                                </GradientStopCollection>
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>

                                    </Grid.Background>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="16" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Menu x:Name="NavMenu"
                    Grid.ColumnSpan="3"
                    Height="20"
                    Margin="1,0,0,0"
                    VerticalAlignment="Center"
                    Style="{StaticResource NavWinMenu}">
                                        <MenuItem Style="{StaticResource NavWinHeaderMenuItem}"
                          ItemContainerStyle="{StaticResource NavWinSubmenuItem}"
                          IsSubmenuOpen="{Binding (MenuItem.IsSubmenuOpen), 
                  Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                            <MenuItem.ItemsSource>
                                                <MultiBinding Converter="{StaticResource JournalEntryUnifiedViewConverter}">
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="BackStack" />
                                                    <Binding RelativeSource="{RelativeSource TemplatedParent}"
                               Path="ForwardStack" />
                                                </MultiBinding>
                                            </MenuItem.ItemsSource>
                                        </MenuItem>
                                    </Menu>

                                    <Path Grid.Column="0"
                    SnapsToDevicePixels="false"
                    IsHitTestVisible="false"
                    Margin="2,1.5,0,1.5"
                    Grid.ColumnSpan="3"
                    StrokeThickness="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Data="M22.5767,21.035 Q27,19.37 
                      31.424,21.035 A12.5,12.5,0,0,0,53.5,13
                      A12.5,12.5,0,0,0,37.765,0.926
                      Q27,4.93 16.235,0.926
                      A12.5,12.5,0,0,0,0.5,13 
                      A12.5,12.5,0,0,0,22.5767,21.035 z">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Path.Stroke>
                                        <Path.Fill>

                                            <LinearGradientBrush EndPoint="0,1"
                                       StartPoint="0,0">
                                                <GradientStop Color="{DynamicResource ControlMediumColor}"
                                  Offset="0" />

                                                <GradientStop Color="{DynamicResource ControlDarkColor}"
                                  Offset="0.984" />
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Button Style="{StaticResource NavWinButtonStyle}"
                      Command="NavigationCommands.BrowseBack"
                      Content="M 4 0 L 0 4 L 4 8 Z"
                      Margin="3,1.5,2,1.5"
                      Grid.Column="0" />
                                    <Button Style="{StaticResource NavWinButtonStyle}"
                      Command="NavigationCommands.BrowseForward"
                      Content="M 4 0 L 0 4 L 4 8 Z"
                      Margin="2,1.5,0,1.5"
                      Grid.Column="1" />
                                </Grid>
                            </Border>
                            <Grid>
                                <AdornerDecorator>
                                    <Border BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <ContentPresenter x:Name="PART_NavWinCP"
                                  ClipToBounds="true" />
                                    </Border>
                                </AdornerDecorator>

                                <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Visibility="Collapsed"
                        IsTabStop="false" />
                            </Grid>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ResizeMode"
                   Value="CanResizeWithGrip">
                                <Setter TargetName="WindowResizeGrip"
                    Property="Visibility"
                    Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Stroke" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Stroke" Color="#222"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Stroke" Color="#FF526C7B"/>
        <SolidColorBrush x:Key="Expander.Pressed.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Pressed.Arrow.Stroke" Color="#FF003366"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Stroke" Color="DarkGray"/>
        <SolidColorBrush x:Key="Expander.Disabled.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Disabled.Arrow.Stroke" Color="#666"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Fill" Color="Transparent"/>
        <SolidColorBrush x:Key="Expander.Static.Circle.Stroke" Color="DarkGray"/>
        <SolidColorBrush x:Key="Expander.Static.Arrow.Stroke" Color="#666"/>
        <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border Padding="{TemplateBinding Padding}">
        					<Grid Background="Transparent" SnapsToDevicePixels="False">
        						<Grid.RowDefinitions>
        							<RowDefinition Height="19"/>
        							<RowDefinition Height="*"/>
        						</Grid.RowDefinitions>
        						<Grid>
        							<Grid.LayoutTransform>
        								<TransformGroup>
        									<TransformGroup.Children>
        										<TransformCollection>
        											<RotateTransform Angle="-90"/>
        										</TransformCollection>
        									</TransformGroup.Children>
        								</TransformGroup>
        							</Grid.LayoutTransform>
        							<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
        							<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
        						</Grid>
        						<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
        					</Grid>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border Padding="{TemplateBinding Padding}">
        					<Grid Background="Transparent" SnapsToDevicePixels="False">
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition Width="19"/>
        							<ColumnDefinition Width="*"/>
        						</Grid.ColumnDefinitions>
        						<Grid>
        							<Grid.LayoutTransform>
        								<TransformGroup>
        									<TransformGroup.Children>
        										<TransformCollection>
        											<RotateTransform Angle="180"/>
        										</TransformCollection>
        									</TransformGroup.Children>
        								</TransformGroup>
        							</Grid.LayoutTransform>
        							<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
        							<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
        						</Grid>
        						<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        					</Grid>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border Padding="{TemplateBinding Padding}">
        					<Grid Background="Transparent" SnapsToDevicePixels="False">
        						<Grid.RowDefinitions>
        							<RowDefinition Height="19"/>
        							<RowDefinition Height="*"/>
        						</Grid.RowDefinitions>
        						<Grid>
        							<Grid.LayoutTransform>
        								<TransformGroup>
        									<TransformGroup.Children>
        										<TransformCollection>
        											<RotateTransform Angle="90"/>
        										</TransformCollection>
        									</TransformGroup.Children>
        								</TransformGroup>
        							</Grid.LayoutTransform>
        							<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
        							<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center"/>
        						</Grid>
        						<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
        					</Grid>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ExpanderHeaderFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Border>
        					<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
        				</Border>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border Padding="{TemplateBinding Padding}">
        					<Grid Background="Transparent" SnapsToDevicePixels="False" Margin="5,5,0,0">
        						<Grid.ColumnDefinitions>
        							<ColumnDefinition Width="19"/>
        							<ColumnDefinition Width="*"/>
        						</Grid.ColumnDefinitions>
        						<Ellipse x:Name="circle" Fill="{StaticResource Expander.Static.Circle.Fill}" HorizontalAlignment="Center" Height="19" Stroke="{StaticResource Expander.Static.Circle.Stroke}" VerticalAlignment="Center" Width="19"/>
        						<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="White" StrokeThickness="2" VerticalAlignment="Center"/>
        						<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
        					</Grid>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
        					</Trigger>
        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.MouseOver.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Stroke}"/>
        						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Pressed.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Pressed.Arrow.Stroke}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Stroke" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Stroke}"/>
        						<Setter Property="Fill" TargetName="circle" Value="{StaticResource Expander.Disabled.Circle.Fill}"/>
        						<Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.Disabled.Arrow.Stroke}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="help_expander" TargetType="{x:Type Expander}">
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
        	<Setter Property="BorderBrush" Value="Transparent"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Expander}">
        				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
        					<DockPanel>
        						<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        						<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					</DockPanel>
        				</Border>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsExpanded" Value="true">
        						<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
        					</Trigger>
        					<Trigger Property="ExpandDirection" Value="Right">
        						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
        						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
        						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
        					</Trigger>
        					<Trigger Property="ExpandDirection" Value="Up">
        						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
        						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
        						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
        					</Trigger>
        					<Trigger Property="ExpandDirection" Value="Left">
        						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
        						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
        						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </NavigationWindow.Resources>

    <NavigationWindow.Content >
        <Grid  Background="#FF686868">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20*" MinWidth="130"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="75*" MinWidth="130"/>
            </Grid.ColumnDefinitions>
            <StackPanel>
                <Grid  Background="#FF686868">
                    <Expander BorderThickness="0" Background="#FF686868" Header="Search help" Foreground="White" FontSize="16" BorderBrush="{x:Null}" Style="{DynamicResource help_expander}" >
                        <StackPanel>
                            <Border Height="4" Background="#FF686868"/>
                            <Grid Margin="0,0,0,0" Height="23" Background="#FF686868">
                                <TextBox VerticalAlignment="Top" x:Name="search_tb" Margin="-1,0,-1,0" BorderBrush="{x:Null}" Height="23" TextChanged="search_pages_words_tb_TextChanged" FontSize="12"/>

                                <TextBlock IsHitTestVisible="False" Text="Search" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,3,0,3" Foreground="DarkGray" Height="17" FontSize="12">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=search_tb}" Value="">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                            

                            <Grid Margin="0,0,0,0" Height="23" Background="#FF686868">
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Search in :" Foreground="White" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="12"/>
                            </Grid>
                            <Grid Margin="0,0,0,0" Height="26" Background="#FF686868">
                                <StackPanel Margin="5,0,0,0" Orientation="Horizontal" VerticalAlignment="Top">
                                    <RadioButton x:Name="rb_pages" HorizontalAlignment="Left" Margin="0,0,3,0" VerticalAlignment="Center" Foreground="White" BorderThickness="0" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" IsChecked="True" Checked="rb_Checked"/>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="pages" Foreground="White" VerticalAlignment="Center" Margin="0" FontSize="12"/>
                                    <RadioButton  x:Name="rb_headings" HorizontalAlignment="Left" Margin="7,0,3,0" VerticalAlignment="Center" Foreground="White" BorderThickness="0" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Checked="rb_Checked"/>
                                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="headings" Foreground="White" VerticalAlignment="Center" Margin="0,3.52" FontSize="12"/>
                                </StackPanel>
                            </Grid>

                            <Border Margin="0,0,0,0" Height="2" Background="#FF7E7E7E"/>
                            <Grid Margin="0,0,0,0" Height="23" Background="#FF686868">
                                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Search method :" Foreground="White" VerticalAlignment="Center" Margin="5,0,0,0" FontSize="12"/>
                            </Grid>
                            <Grid Margin="0,0,0,0" Height="48" Background="#FF686868">
                                <StackPanel Margin="5,0,0,0" Orientation="Vertical">
                                    <RadioButton Content="all words" x:Name="rb_and" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Center" Foreground="White" BorderThickness="0" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Checked="rb_Checked" FontSize="12"/>
                                    <!--<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="all words" Foreground="White" VerticalAlignment="Center" Margin="0" FontSize="12"/>-->
                                    <RadioButton Content="at least one word" x:Name="rb_or" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Foreground="White" BorderThickness="0" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" Checked="rb_Checked" IsChecked="True" FontSize="12"/>
                                    <!--<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="at least one word" Foreground="White" VerticalAlignment="Center" Margin="0,3.52" FontSize="12"/>-->
                                    <RadioButton Content="whole phrase" x:Name="rb_phrase" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" Foreground="White" BorderThickness="0" BorderBrush="{x:Null}" RenderTransformOrigin="0.5,0.5" IsChecked="True" Checked="rb_Checked" FontSize="12"/>
                                    <!--<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="phrase" Foreground="White" VerticalAlignment="Center" Margin="0,3.52,0,3.48" FontSize="12"/>-->
                                </StackPanel>
                            </Grid>


                            
                        </StackPanel>
                    </Expander>
                </Grid>
                <Border Margin="0,0,0,0" Height="4" Background="{StaticResource gray_background_brush}"/>
                <Border Margin="0,0,0,0" Height="2" Background="DarkGray"/>
                
                
                <Border Height="30" Background="#FF686868">
                    <TextBlock Foreground="White"  FontSize="20" Margin="5,0,-1,0">
                        Content
                    </TextBlock>
                </Border>
                <TreeView Background="White" ScrollViewer.CanContentScroll="True" x:Name="help_tree_view" FontSize="10pt" SelectedItemChanged="HelponselectedItemChanged" BorderBrush="{x:Null}" >
                    <TreeViewItem Header="Getting started" Tag="help/overview/overview.xaml" >
                        <TreeViewItem Header="About" Tag="help/overview/about.xaml" >

                        </TreeViewItem>
                    </TreeViewItem>
                    <TreeViewItem Header="Resources" Tag="help/resources/resources.xaml">
                        <TreeViewItem Header="Category view" Tag="help/resources/category_view.xaml" >

                        </TreeViewItem>
                        <TreeViewItem Header="Image pool" Tag="help/resources/image_pool.xaml" >

                        </TreeViewItem>
                        <TreeViewItem Header="Context menu" Tag="help/resources/context_menu.xaml" >
                            <TreeViewItem Header="Image" Tag="help/resources/context_menu_items/image_menu.xaml" >

                            </TreeViewItem>
                            <TreeViewItem Header="Category" Tag="help/resources/context_menu_items/category_menu.xaml" >

                            </TreeViewItem>
                            <TreeViewItem Header="Category view" Tag="help/resources/context_menu_items/category_view_menu.xaml" >

                            </TreeViewItem>
                            <TreeViewItem Header="Image pool" Tag="help/resources/context_menu_items/image_pool_menu.xaml" >

                            </TreeViewItem>
                        </TreeViewItem>
                        <TreeViewItem Header="Interaction">
                            <TreeViewItem Header="Mouse" Tag="help/resources/mouse.xaml" >

                            </TreeViewItem>
                            <TreeViewItem Header="Keyboard" Tag="help/resources/keyboard.xaml" >

                            </TreeViewItem>
                        </TreeViewItem>
                    </TreeViewItem>
                    <TreeViewItem Header="Generate match" Tag="help/generate/generate.xaml">

                    </TreeViewItem>
                    <TreeViewItem Header="Matching overview" Tag="help/matching/matching.xaml">

                        <TreeViewItem Header="Interaction">
                            <TreeViewItem Header="Mouse" Tag="help/matching/mouse.xaml">

                            </TreeViewItem>
                            <TreeViewItem Header="Keyboard" Tag="help/matching/keyboard.xaml">

                            </TreeViewItem>
                            <TreeViewItem Header="Context menu" Tag="help/matching/context_menu.xaml">
                                <TreeViewItem Header="Image" Tag="help/matching/context_menu_items/image_menu.xaml">
                                    <TreeViewItem Header="Connections" Tag="help/matching/context_menu_items/image_menu_connections.xaml">

                                    </TreeViewItem>
                                    <TreeViewItem Header="Points" Tag="help/matching/context_menu_items/image_menu_points.xaml">

                                    </TreeViewItem>
                                </TreeViewItem>
                                <TreeViewItem Header="Viewport" Tag="help/matching/context_menu_items/viewport_menu.xaml">

                                </TreeViewItem>
                            </TreeViewItem>
                        </TreeViewItem>
                    </TreeViewItem>
                    <TreeViewItem Header="Algorithm elements" Tag="help/framework_elements/framework_elements.xaml" >
                        <TreeViewItem Header="Scene" Tag="help/framework_elements/scene.xaml" >
                            <TreeViewItem Header="Category" Tag="help/framework_elements/category.xaml" >
                                <TreeViewItem Header="Image" Tag="help/framework_elements/image.xaml" >
                                    <TreeViewItem Header="Feature points" Tag="help/framework_elements/feature_points.xaml" >

                                    </TreeViewItem>
                                    <TreeViewItem Header="Descriptor" Tag="help/framework_elements/descriptor.xaml" >

                                    </TreeViewItem>
                                    <TreeViewItem Header="Image connections" Tag="help/framework_elements/image_connections.xaml" >

                                    </TreeViewItem>
                                </TreeViewItem>
                            </TreeViewItem>
                        </TreeViewItem>
                    </TreeViewItem>
                    <TreeViewItem Header="User interface" Tag="help/ui_elements/ui_elements.xaml" >
                        <TreeViewItem Header="Main window">

                        </TreeViewItem>
                        <TreeViewItem Header="Resources">
                            <TreeViewItem Header="Category view scroll bar" Tag="help/ui_elements/resources/category_view_scroll_bar.xaml" >

                            </TreeViewItem>
                            <TreeViewItem Header="Image pool scroll bar" Tag="help/ui_elements/resources/image_pool_scroll_bar.xaml" >

                            </TreeViewItem>
                            <TreeViewItem Header="Divider" Tag="help/ui_elements/resources/divider.xaml" >

                            </TreeViewItem>
                        </TreeViewItem>
                        <TreeViewItem Header="Generate match">

                        </TreeViewItem>
                        <TreeViewItem Header="Matching overview">

                        </TreeViewItem>
                        <TreeViewItem Header="Settings">

                        </TreeViewItem>
                    </TreeViewItem>
                </TreeView>

            </StackPanel>

            <GridSplitter Grid.Column="1" Width="5"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Stretch" Background="#FF686868" />
            <Frame x:Name="frame" Grid.Column="2" Background="#FFCBCBCB"/>
        </Grid>
    </NavigationWindow.Content>


</NavigationWindow>
